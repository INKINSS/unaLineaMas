---
import { getCollection, render } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import SideBar from "@/components/sideBar/SideBar";

export async function getStaticPaths() {
  const articles = await getCollection("contributing");
  return articles.map((article: any) => ({
    params: {
      slug: article.data.slug,
    },
    props: {
      article,
    },
  }));
}

const { article } = Astro.props;
const { Content } = await render(article);

const articles = await getCollection("contributing");

const groupedArticles = articles.reduce<
  Record<string, Array<{ titleSideBar: string; slug: string }>>
>((acc, article) => {
  const category = article.data.category || "Sin categoría";
  if (!acc[category]) acc[category] = [];

  acc[category].push({
    titleSideBar:
      article.data.titleSideBar || article.data.title || "Sin título",
    slug: article.data.slug || "",
  });

  return acc;
}, {});
---

<Layout>
  <article
    class="prose max-w-[90%] prose-lg prose-h1:mb-0 prose-p:mt-2 prose-h2:mt-2 prose-h2:mb-2 prose-h3:mt-2 prose-h3:mb-2 prose-p:text-balance prose-h1:text-[2.5rem]"
  >
    <SideBar client:only groupedArticles={groupedArticles}>
      <Content />
    </SideBar>
  </article>
</Layout>
